create or replace 
PROCEDURE TCH_VOID_PROC(
  I_TERMINAL_SERIAL_NUMBER IN VARCHAR2
, I_INV_NUMBER IN VARCHAR2
, I_APP_NAME IN VARCHAR2
, O_SUMM_FLAG OUT VARCHAR2
, O_SQL_CODE OUT VARCHAR2
, O_APP_ERROR_CODE OUT VARCHAR2
, O_DEBUG_POINT OUT VARCHAR2 
, O_HOST_ID OUT VARCHAR2
, C_VOID_DATA OUT SYS_REFCURSOR
) AS 

V_COUNT NUMBER(10):=NULL;
V_TIP VARCHAR2(1):=NULL;
V_REQUEST_TYPE VARCHAR2(10):=NULL;
V_DAILY_LIMIT VARCHAR2(20):=NULL;
V_TOTAL_COUNT VARCHAR2(20):=NULL;
V_INV_NUMBER VARCHAR2(6):=NULL;
BEGIN
  
  O_DEBUG_POINT:='1';
-- EXTRA CHECK CONDITION FOR IRCTC TO AVOID VOID OF INV NUMBER PREVIOUS OR FUTURE
  IF I_APP_NAME = 'IRCTC' THEN
    SELECT MAX(TO_NUMBER(TPT.P_INVOICENUMBER)) INTO V_INV_NUMBER FROM TCH_PAYMENT_TXN TPT 
    WHERE TPT.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
    AND TPT.P_REQUEST_TYPE <> 'REVERSAL'
    AND TPT.P_RESPONSE_CODE = '00';
    
    IF V_INV_NUMBER <> I_INV_NUMBER THEN
       O_DEBUG_POINT:='1AAB';
        RAISE_APPLICATION_ERROR(-20155,'INVALID INV NUMBER');
    END IF;
  
  END IF;
  SELECT COUNT(1) INTO V_COUNT FROM TCH_PAYMENT_TXN TPT 
    WHERE TPT.P_INVOICENUMBER = I_INV_NUMBER 
    AND TPT.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER  
    AND TPT.P_REQUEST_TYPE <> 'REVERSAL'
    AND TPT.P_RESPONSE_CODE = '00';
  
  IF V_COUNT = 0 THEN
    O_DEBUG_POINT:='1A';
    SELECT COUNT(1) INTO V_COUNT FROM TCH_PAYMENT_AMEX_TXN TPT 
      WHERE TPT.P_INVOICENUMBER = I_INV_NUMBER 
      AND TPT.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER  
      AND TPT.P_REQUEST_TYPE <> 'REVERSAL'
      AND TPT.P_RESPONSE_CODE = '00';
      IF V_COUNT = 0 THEN
        O_DEBUG_POINT:='1AB';
        RAISE_APPLICATION_ERROR(-20155,'NO DATA FOUND');
      ELSE
        OPEN C_VOID_DATA FOR
          SELECT TPT.* FROM TCH_PAYMENT_AMEX_TXN TPT 
            WHERE TPT.P_INVOICENUMBER = I_INV_NUMBER 
            AND TPT.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER  
            AND TPT.P_REQUEST_TYPE <> 'REVERSAL'
            AND TPT.P_RESPONSE_CODE = '00';
        O_HOST_ID := 'AMEX';
      END IF;
  ELSE
   BEGIN
        OPEN C_VOID_DATA FOR
          SELECT TPT.* FROM TCH_PAYMENT_TXN TPT 
            WHERE TPT.P_INVOICENUMBER = I_INV_NUMBER 
            AND TPT.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER  
            AND TPT.P_REQUEST_TYPE <> 'REVERSAL'
            AND TPT.P_RESPONSE_CODE = '00';
        O_HOST_ID := 'CR-DB';
    END;
  END IF;
  
   O_DEBUG_POINT:='1AC';
   -- GET DAILY TRANSACTION LIMIT
    SELECT DAILY_TXN_COUNT INTO V_DAILY_LIMIT  FROM TC_TID_HWSR_MAPPING WHERE HWSRNO = I_TERMINAL_SERIAL_NUMBER AND STATUS = 'A';
   -- CHECK IN AMEX TABLE TOO IF FOUND EMPTY IN CR DEBIT   
    SELECT SUM(TOTAL_COUNT) INTO V_TOTAL_COUNT FROM 
    (
      SELECT COUNT(1) AS TOTAL_COUNT FROM TCH_PAYMENT_TXN 
      WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
      AND P_REQUEST_TYPE NOT IN ('REVERSAL','TIP')
      AND P_RESPONSE_CODE = '00'
       
      UNION ALL
      
      SELECT COUNT(1) AS TOTAL_COUNT FROM TCH_PAYMENT_AMEX_TXN 
        WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
        AND P_REQUEST_TYPE NOT IN ('REVERSAL','TIP')
        AND P_RESPONSE_CODE = '00'
      );
      
      V_TOTAL_COUNT := TO_NUMBER(V_TOTAL_COUNT + 1);
      O_DEBUG_POINT:='1AD';
      IF TO_NUMBER(V_TOTAL_COUNT) = TO_NUMBER(V_DAILY_LIMIT) THEN
        O_SUMM_FLAG:='1';
      ELSIF  TO_NUMBER(V_TOTAL_COUNT) > TO_NUMBER(V_DAILY_LIMIT) THEN
        O_SUMM_FLAG:='2';
      END IF;
    
  O_DEBUG_POINT:='2'; 
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    IF O_DEBUG_POINT = '1AB' THEN
      O_APP_ERROR_CODE:='V-010';
    END IF;
    IF O_DEBUG_POINT = '1AAB' THEN
      O_APP_ERROR_CODE:='V-010';
    END IF;
    
  WHEN OTHERS THEN
    IF O_DEBUG_POINT = '1AB' THEN
      O_APP_ERROR_CODE:='V-010';
    END IF;
    IF O_DEBUG_POINT = '1AAB' THEN
      O_APP_ERROR_CODE:='V-010';
    END IF;
  O_SQL_CODE:=SQLCODE;
END TCH_VOID_PROC;