create or replace 
PROCEDURE TCH_SUMARY_REPORT_BTCH_PROC (
  I_TERMINAL_SERIAL_NUMBER IN VARCHAR2
, I_BATCH_NUMBER IN VARCHAR2
, O_MERCHANT_ID OUT VARCHAR2
, O_TERMINAL_ID OUT VARCHAR2
, O_SQL_CODE OUT VARCHAR2
, O_APP_ERROR_CODE OUT VARCHAR2
, O_BATCH_NUMBER OUT VARCHAR2
, O_DEBUG_POINT OUT VARCHAR2
, O_TIP_AMOUNT OUT VARCHAR2
, O_TIP_COUNT OUT VARCHAR2
, C_SETTLEMENT_DATA_REQUEST OUT SYS_REFCURSOR
, C_SETTLEMENT_DATA_SCHEME OUT SYS_REFCURSOR
)AS 

V_COUNT NUMBER(4):= NULL;
V_BATCH_S NUMBER(4) := NULL;
V_BATCH_S1 NUMBER(4) := NULL;
V_MID VARCHAR2(20):=NULL;
V_TID VARCHAR2(20):=NULL;
V_FLAG VARCHAR2(1):=NULL;
BEGIN

-- GET BATCH NUMBER
   O_BATCH_NUMBER:= I_BATCH_NUMBER;


-- GET SETTLEMENT RELATED INFORMATION
    O_DEBUG_POINT:='1';
   SELECT COUNT(1) INTO V_COUNT FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
				AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
				WHERE TTP.P_RESPONSE_CODE='00' 
				AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
				AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
        
    IF V_COUNT <> 0 THEN
      BEGIN
          SELECT distinct P_MERCHANTID,P_TERMINALID INTO O_MERCHANT_ID,O_TERMINAL_ID FROM TCH_SETTLED_PAYMENT_TXN WHERE ( P_SETTLEMENT_FLAG = 'Y' OR P_SETTLEMENT_FLAG = 'P') 
          AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
          AND P_BATCH_NUMBER = O_BATCH_NUMBER;
              
        -- GET DETAILS OF SUMMARY REPORT FROM SETTELEMENT TABLE WITH BATCH NUMBER VALIDATION        
        O_DEBUG_POINT:='1BB';
        OPEN C_SETTLEMENT_DATA_REQUEST FOR
        SELECT REQUEST_TYPE, SUM(COUNT_VAL) AS COUNT_VAL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT FROM 
        (
          SELECT CASE P_REQUEST_TYPE 
          WHEN 'SALECSHBK' THEN 'SALE' 
          WHEN'CSHBK' THEN 'SALE' 
          WHEN 'SALECOMP' THEN 'SALE'
          WHEN 'VOIDSALECASHBACK' THEN 'VOID'
          ELSE P_REQUEST_TYPE END AS REQUEST_TYPE, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
            AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
            WHERE TTP.P_RESPONSE_CODE = '00' 
            AND TTP.P_SETTLEMENT_FLAG = 'Y' 
            AND TTP.P_REQUEST_TYPE <> 'REVERSAL' 
            AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
            AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
            GROUP BY TTP.P_REQUEST_TYPE
            UNION ALL
            (
          SELECT P_REQUEST_TYPE AS REQUEST_TYPE,COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT  
          FROM TCH_SETTLED_PAYMENT_RT_VT_TT TSR JOIN TCH_HANDSHAKES TH ON TSR.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                      AND TSR.P_TERMINALID = TH.H_TID AND TSR.P_CLIENTID = TH.H_CLIENT_ID
                      WHERE TSR.P_RESPONSE_CODE = '00' 
                      AND TSR.P_SETTLEMENT_FLAG = 'N'
                      AND TSR.P_REQUEST_TYPE <> 'REVERSAL'
                      AND TSR.P_BATCH_NUMBER = O_BATCH_NUMBER
                      AND TSR.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TSR.P_REQUEST_TYPE
            )
          ) T 
            GROUP BY REQUEST_TYPE;
                      
           O_DEBUG_POINT:='1CC';  
         OPEN C_SETTLEMENT_DATA_SCHEME FOR
          SELECT Q1.SHEME_NAME , Q1.COUNT_VAL, Q1.TOTAL_AMOUNT, Q2.TOTAL_REFUND_AMOUNT
          FROM (SELECT  P_CARD_LABEL AS SHEME_NAME, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT
          FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                      AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
                      WHERE TTP.P_RESPONSE_CODE = '00' 
                      AND TTP.P_SETTLEMENT_FLAG = 'Y'
                      AND TTP.P_REQUEST_TYPE <> 'TIP'
                      AND TTP.P_REQUEST_TYPE <> 'VOID'
                      AND TTP.P_REQUEST_TYPE <> 'REFUND'
                      AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                      AND TTP.P_REQUEST_TYPE <> 'PREAUTH'
                      AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
                      AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                      AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                      GROUP BY TTP.P_CARD_LABEL) Q1
          LEFT JOIN
          (SELECT P_CARD_LABEL AS SHEME_NAME,SUM(P_ORIGINAL_AMOUNT) AS TOTAL_REFUND_AMOUNT  FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                      AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
                      WHERE TTP.P_RESPONSE_CODE = '00' 
                      AND TTP.P_SETTLEMENT_FLAG = 'Y'
                      AND TTP.P_REQUEST_TYPE = 'REFUND'                      
                      AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                      AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TTP.P_CARD_LABEL) Q2
          ON Q1.SHEME_NAME = Q2.SHEME_NAME;
          
       --RAISE_APPLICATION_ERROR(-20121,'NO DATA FOUND');
      END;
    ELSE
      SELECT COUNT(1) INTO V_COUNT FROM TCH_SETTLED_PAYMENT_RT_VT_TT TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
				AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
				WHERE TTP.P_RESPONSE_CODE='00' 
				AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
        AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
				AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
        
        IF V_COUNT = 0 THEN
          O_DEBUG_POINT:='1A';
          RAISE_APPLICATION_ERROR('-21000','NO RECORD FOR SUMMARY REPORT');
        ELSE
            O_DEBUG_POINT:='1DD';
            OPEN C_SETTLEMENT_DATA_REQUEST FOR
              SELECT REQUEST_TYPE, SUM(COUNT_VAL) AS COUNT_VAL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT FROM 
              (
                SELECT CASE P_REQUEST_TYPE 
                WHEN 'SALECSHBK' THEN 'SALE' 
                WHEN'CSHBK' THEN 'SALE'
                WHEN 'SALECOMP' THEN 'SALE'
                WHEN 'VOIDSALECASHBACK' THEN 'VOID'
                ELSE P_REQUEST_TYPE END AS REQUEST_TYPE, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                  AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
                  WHERE TTP.P_RESPONSE_CODE = '00' 
                  AND TTP.P_SETTLEMENT_FLAG = 'Y' 
                  AND TTP.P_REQUEST_TYPE <> 'REVERSAL' 
                  AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                  AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                  GROUP BY TTP.P_REQUEST_TYPE
                  UNION ALL
                  (
                SELECT P_REQUEST_TYPE AS REQUEST_TYPE,COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT  
                FROM TCH_SETTLED_PAYMENT_RT_VT_TT TSR JOIN TCH_HANDSHAKES TH ON TSR.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                            AND TSR.P_TERMINALID = TH.H_TID AND TSR.P_CLIENTID = TH.H_CLIENT_ID
                            WHERE TSR.P_RESPONSE_CODE = '00' 
                            AND TSR.P_SETTLEMENT_FLAG = 'N'
                            AND TSR.P_REQUEST_TYPE <> 'REVERSAL'
                            AND TSR.P_BATCH_NUMBER = O_BATCH_NUMBER
                            AND TSR.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TSR.P_REQUEST_TYPE
                  )
                ) T 
                  GROUP BY REQUEST_TYPE;
                            
                 O_DEBUG_POINT:='1EE';  
               OPEN C_SETTLEMENT_DATA_SCHEME FOR
                SELECT Q1.SHEME_NAME , Q1.COUNT_VAL, Q1.TOTAL_AMOUNT, Q2.TOTAL_REFUND_AMOUNT
                FROM (SELECT  P_CARD_LABEL AS SHEME_NAME, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT
                FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                            AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
                            WHERE TTP.P_RESPONSE_CODE = '00' 
                            AND TTP.P_SETTLEMENT_FLAG = 'Y'
                            AND TTP.P_REQUEST_TYPE <> 'TIP'
                            AND TTP.P_REQUEST_TYPE <> 'VOID'
                            AND TTP.P_REQUEST_TYPE <> 'REFUND'
                            AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                            AND TTP.P_REQUEST_TYPE <> 'PREAUTH'
                            AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
                            AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                            AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                            GROUP BY TTP.P_CARD_LABEL) Q1
                LEFT JOIN
                (SELECT P_CARD_LABEL AS SHEME_NAME,SUM(P_ORIGINAL_AMOUNT) AS TOTAL_REFUND_AMOUNT  FROM TCH_SETTLED_PAYMENT_TXN TTP JOIN TCH_HANDSHAKES TH ON TTP.P_MERCHANTID = TH.H_CARD_ACQUIRING_ID
                            AND TTP.P_TERMINALID = TH.H_TID AND TTP.P_CLIENTID = TH.H_CLIENT_ID
                            WHERE TTP.P_RESPONSE_CODE = '00' 
                            AND TTP.P_SETTLEMENT_FLAG = 'Y'
                            AND TTP.P_REQUEST_TYPE = 'REFUND'                      
                            AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                            AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TTP.P_CARD_LABEL) Q2
                ON Q1.SHEME_NAME = Q2.SHEME_NAME;
        END IF;
    END IF;
    
    BEGIN
      SELECT COUNT(*),SUM(P_ADDAMOUNT) INTO O_TIP_COUNT,O_TIP_AMOUNT FROM TCH_SETTLED_PAYMENT_TXN 
      WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
      AND P_BATCH_NUMBER = O_BATCH_NUMBER
      AND P_TIP_APPROVED = '1' GROUP BY P_BATCH_NUMBER;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        NULL;
    END;
    O_BATCH_NUMBER := LPAD(O_BATCH_NUMBER,6,'0');
    O_DEBUG_POINT:='3';
   
    EXCEPTION  
    WHEN NO_DATA_FOUND THEN 
        IF O_DEBUG_POINT = '1A' THEN 
            O_APP_ERROR_CODE := 'S-601';
        END IF;
                
      WHEN OTHERS THEN
        IF O_DEBUG_POINT = '1A' THEN 
            O_APP_ERROR_CODE := 'S-601'; 
        END IF ;   
                
        O_SQL_CODE := SQLCODE; 
    
END TCH_SUMARY_REPORT_BTCH_PROC;