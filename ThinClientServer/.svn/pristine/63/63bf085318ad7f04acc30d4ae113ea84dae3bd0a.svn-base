create or replace 
PROCEDURE TCH_SUMMARY_REPORT_PROC1 (
  I_TERMINAL_SERIAL_NUMBER IN VARCHAR2
, I_MID IN VARCHAR2
, I_TID IN VARCHAR2
, I_HOST_ID IN VARCHAR2
, I_SUMM_FLAG IN VARCHAR2
, O_SQL_CODE OUT VARCHAR2
, O_START_DATE  OUT VARCHAR2
, O_END_DATE OUT VARCHAR2
, O_APP_ERROR_CODE OUT VARCHAR2
, O_BATCH_NUMBER OUT VARCHAR2
, O_DEBUG_POINT OUT VARCHAR2
, O_TIP_AMOUNT OUT VARCHAR2
, O_TIP_COUNT OUT VARCHAR2
, O_FINAL_COUNT OUT VARCHAR2
, C_SETTLEMENT_DATA_REQUEST OUT SYS_REFCURSOR
, C_SETTLEMENT_DATA_SCHEME OUT SYS_REFCURSOR
)AS 

V_COUNT NUMBER(4):= NULL;
V_MID VARCHAR2(20):=NULL;
V_BATCH_S NUMBER(4) := NULL;
V_BATCH_S1 NUMBER(4) := NULL;
V_TID VARCHAR2(20):=NULL;
V_SUMM_COUNT VARCHAR2(20):=NULL;
BEGIN
-- UPDATE SU-99 FLAG
 UPDATE TCH_HANDSHAKES SET H_FIRST_TXN_CHK = '' WHERE H_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER; 
 
    IF I_SUMM_FLAG = 'SU-99' THEN
     O_BATCH_NUMBER := GET_PREVIOUS_BATCH_NUMBER(I_TERMINAL_SERIAL_NUMBER,I_MID,I_TID); 
     BEGIN
          O_DEBUG_POINT:='1B';
          
          SELECT B_SUMM_COUNT INTO V_SUMM_COUNT FROM TCH_BATCH_SUMMARY 
          WHERE B_MID = I_MID
          AND B_TID = I_TID
          AND B_BATCH_NUMBER = O_BATCH_NUMBER
          AND B_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
          GROUP BY B_SUMM_COUNT,B_BATCH_NUMBER,B_TERMINAL_SERIAL_NUMBER;
          
          IF V_SUMM_COUNT = '0' THEN
            UPDATE TCH_BATCH_SUMMARY SET B_SUMM_COUNT = '1' 
            WHERE B_MID = I_MID
            AND B_TID = I_TID
            AND B_BATCH_NUMBER = O_BATCH_NUMBER
            AND B_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
          ELSE 
            O_DEBUG_POINT:='1BA';
            RAISE_APPLICATION_ERROR(-20111,'ALREADY PRINTED TXN');
          END IF;
          OPEN C_SETTLEMENT_DATA_REQUEST FOR
            SELECT REQUEST_TYPE, SUM(COUNT_VAL) AS COUNT_VAL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT FROM 
            (
              SELECT CASE P_REQUEST_TYPE 
              WHEN 'SALECSHBK' THEN 'SALE' 
              WHEN'CSHBK' THEN 'SALE' 
              WHEN 'SALECOMP' THEN 'SALE'
              WHEN 'SALEEMI' THEN 'SALE'
              WHEN 'VOIDSALECASHBACK' THEN 'VOID'
              WHEN 'VOIDEMISALE' THEN 'VOID'
              WHEN 'VOIDSALETIP' THEN 'VOID'
              ELSE P_REQUEST_TYPE END AS REQUEST_TYPE, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT 
              FROM TCH_SETTLED_PAYMENT_TXN TTP 
                WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE <> 'REVERSAL' 
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                GROUP BY TTP.P_REQUEST_TYPE
                UNION ALL
                (
                  SELECT P_REQUEST_TYPE AS REQUEST_TYPE,COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT  
                    FROM TCH_SETTLED_PAYMENT_RT_VT_TT TSR 
                    WHERE TSR.P_RESPONSE_CODE = '00'
                    AND TSR.P_TERMINALID = I_TID
                    AND TSR.P_REQUEST_TYPE <> 'REVERSAL'
                    AND TSR.P_BATCH_NUMBER = O_BATCH_NUMBER
                    AND TSR.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TSR.P_REQUEST_TYPE
                )
              ) T 
                GROUP BY REQUEST_TYPE;
                          
               O_DEBUG_POINT:='1CC';  
             OPEN C_SETTLEMENT_DATA_SCHEME FOR
              SELECT Q1.SHEME_NAME , Q1.COUNT_VAL, Q1.TOTAL_AMOUNT, Q2.TOTAL_REFUND_AMOUNT
              FROM (SELECT  P_CARD_LABEL AS SHEME_NAME, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT
              FROM TCH_SETTLED_PAYMENT_TXN TTP 
                          WHERE TTP.P_RESPONSE_CODE = '00' 
                          AND TTP.P_REQUEST_TYPE <> 'TIP'
                          AND TTP.P_REQUEST_TYPE <> 'VOID'
                          AND TTP.P_REQUEST_TYPE <> 'REFUND'
                          AND TTP.P_TERMINALID = I_TID
                          AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                          AND TTP.P_REQUEST_TYPE <> 'PREAUTH'
                          AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
                          AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                          AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                          GROUP BY TTP.P_CARD_LABEL) Q1
              LEFT JOIN
              (SELECT P_CARD_LABEL AS SHEME_NAME,SUM(P_ORIGINAL_AMOUNT) AS TOTAL_REFUND_AMOUNT  
                FROM TCH_SETTLED_PAYMENT_TXN TTP 
                  WHERE TTP.P_RESPONSE_CODE = '00' 
                  AND TTP.P_REQUEST_TYPE = 'REFUND'   
                  AND TTP.P_TERMINALID = I_TID
                  AND TTP.P_BATCH_NUMBER = O_BATCH_NUMBER
                  AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TTP.P_CARD_LABEL) Q2
              ON Q1.SHEME_NAME = Q2.SHEME_NAME;
            --GET TIP AMOUNT   
            BEGIN
              SELECT COUNT(*),SUM(P_ADDAMOUNT) INTO O_TIP_COUNT,O_TIP_AMOUNT FROM TCH_SETTLED_PAYMENT_TXN 
              WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              AND P_TERMINALID = I_TID
              AND P_BATCH_NUMBER = O_BATCH_NUMBER
              AND P_TIP_APPROVED = '1' GROUP BY P_BATCH_NUMBER;
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                NULL;
             END;
          END;
    ELSE
      -- GET BATCH NUMBER
     O_BATCH_NUMBER := GET_BATCH_NUMBER(I_TERMINAL_SERIAL_NUMBER,I_MID,I_TID);
    
  -- GET COUNT FOR ALL THE TRANSACTION FROM CURRENT OPEN BATCH
      O_DEBUG_POINT:='1';
      SELECT SUM(TOTAL_VAL) INTO O_FINAL_COUNT FROM 
      (
        SELECT COUNT(1) AS TOTAL_VAL  FROM TCH_PAYMENT_TXN 
        WHERE P_RESPONSE_CODE = '00' 
        AND P_REQUEST_TYPE <> 'TIP'
        AND P_REQUEST_TYPE <> 'REVERSAL' 
        AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
        AND P_TERMINALID = I_TID
        
        UNION ALL
        
        SELECT COUNT(1) AS TOTAL_VAL  FROM TCH_PAYMENT_AMEX_TXN 
        WHERE P_RESPONSE_CODE = '00' 
        AND P_REQUEST_TYPE <> 'TIP'
        AND P_REQUEST_TYPE <> 'REVERSAL' 
        AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
        AND P_TERMINALID = I_TID
        
        UNION ALL
        
        SELECT COUNT(1) AS TOTAL_VAL  FROM TCH_DCC_PAYMENT_TXN 
        WHERE P_RESPONSE_CODE = '00' 
        AND P_REQUEST_TYPE <> 'TIP'
        AND P_REQUEST_TYPE <> 'REVERSAL' 
        AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
        AND P_TERMINALID = I_TID
          
      );
      
      IF O_FINAL_COUNT = 0 THEN
        BEGIN
          O_DEBUG_POINT:='1A';
          RAISE_APPLICATION_ERROR(-20121,'NO DATA FOUND');
        END;
      ELSE
        IF I_HOST_ID IS NULL THEN
          BEGIN
          O_DEBUG_POINT:='1B';
          
          SELECT MIN(P_CREATED),MAX(P_CREATED) INTO O_START_DATE,O_END_DATE FROM TCH_PAYMENT_TXN
            WHERE P_RESPONSE_CODE='00'
            AND P_REQUEST_TYPE <> 'TIP'
            AND P_REQUEST_TYPE <> 'REVERSAL'
            AND P_TERMINALID = I_TID
            AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
          
          OPEN C_SETTLEMENT_DATA_REQUEST FOR
          SELECT REQUEST_TYPE, SUM(COUNT_VAL) AS COUNT_VAL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT FROM (
            SELECT CASE P_REQUEST_TYPE 
            WHEN 'SALECSHBK' THEN 'SALE' 
            WHEN'CSHBK' THEN 'SALE' 
            WHEN 'SALECOMP' THEN 'SALE'
            WHEN 'SALEEMI' THEN 'SALE'
            WHEN 'VOIDSALECSHBK' THEN 'VOID'
            WHEN 'VOIDEMISALE' THEN 'VOID'
           WHEN 'VOIDSALETIP' THEN 'VOID'
            ELSE P_REQUEST_TYPE END AS REQUEST_TYPE, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT 
            FROM TCH_PAYMENT_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
              AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
              AND TTP.P_TERMINALID = I_TID
              AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              GROUP BY TTP.P_REQUEST_TYPE ) T 
              GROUP BY REQUEST_TYPE;
                      
             O_DEBUG_POINT:='1C';  
           OPEN C_SETTLEMENT_DATA_SCHEME FOR
            SELECT Q1.SHEME_NAME , Q1.COUNT_VAL, Q1.TOTAL_AMOUNT, Q2.TOTAL_REFUND_AMOUNT
            FROM (SELECT  P_CARD_LABEL AS SHEME_NAME, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT
            FROM TCH_PAYMENT_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE <> 'TIP'
                AND TTP.P_REQUEST_TYPE <> 'VOID'
                AND TTP.P_REQUEST_TYPE <> 'REFUND'
                AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
                AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                GROUP BY TTP.P_CARD_LABEL) Q1
            LEFT JOIN
            (SELECT P_CARD_LABEL AS SHEME_NAME,SUM(P_ORIGINAL_AMOUNT) AS TOTAL_REFUND_AMOUNT  
            FROM TCH_PAYMENT_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE = 'REFUND'
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TTP.P_CARD_LABEL) Q2
            ON Q1.SHEME_NAME = Q2.SHEME_NAME;
            
            
            --GET TIP AMOUNT   
            BEGIN
              SELECT COUNT(*),SUM(P_ADDAMOUNT) INTO O_TIP_COUNT,O_TIP_AMOUNT FROM TCH_PAYMENT_TXN 
              WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              AND P_TERMINALID = I_TID
              AND P_TIP_APPROVED = '1' GROUP BY P_BATCH_NUMBER;
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                NULL;
             END;
          END;
        ELSIF I_HOST_ID = 'AMEX' THEN
          BEGIN
          O_DEBUG_POINT:='1D';
          
          SELECT MIN(P_CREATED),MAX(P_CREATED) INTO O_START_DATE,O_END_DATE FROM TCH_PAYMENT_AMEX_TXN
            WHERE P_RESPONSE_CODE='00'
            AND P_REQUEST_TYPE <> 'TIP'
            AND P_REQUEST_TYPE <> 'REVERSAL'
            AND P_TERMINALID = I_TID
            AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
          
          OPEN C_SETTLEMENT_DATA_REQUEST FOR
          SELECT REQUEST_TYPE, SUM(COUNT_VAL) AS COUNT_VAL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT FROM (
            SELECT CASE P_REQUEST_TYPE 
            WHEN 'SALECSHBK' THEN 'SALE' 
            WHEN'CSHBK' THEN 'SALE' 
            WHEN 'SALECOMP' THEN 'SALE'
            WHEN 'SALEEMI' THEN 'SALE'
            WHEN 'VOIDSALECSHBK' THEN 'VOID'
            WHEN 'VOIDEMISALE' THEN 'VOID'
            WHEN 'VOIDSALETIP' THEN 'VOID'
            ELSE P_REQUEST_TYPE END AS REQUEST_TYPE, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT 
            FROM TCH_PAYMENT_AMEX_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
              AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
              AND TTP.P_TERMINALID = I_TID
              AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              GROUP BY TTP.P_REQUEST_TYPE ) T 
              GROUP BY REQUEST_TYPE;
                      
             O_DEBUG_POINT:='1E';  
           OPEN C_SETTLEMENT_DATA_SCHEME FOR
            SELECT Q1.SHEME_NAME , Q1.COUNT_VAL, Q1.TOTAL_AMOUNT, Q2.TOTAL_REFUND_AMOUNT
            FROM (SELECT  P_CARD_LABEL AS SHEME_NAME, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT
            FROM TCH_PAYMENT_AMEX_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE <> 'TIP'
                AND TTP.P_REQUEST_TYPE <> 'VOID'
                AND TTP.P_REQUEST_TYPE <> 'REFUND'
                AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
                AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                GROUP BY TTP.P_CARD_LABEL) Q1
            LEFT JOIN
            (SELECT P_CARD_LABEL AS SHEME_NAME,SUM(P_ORIGINAL_AMOUNT) AS TOTAL_REFUND_AMOUNT  
            FROM TCH_PAYMENT_AMEX_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE = 'REFUND'
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TTP.P_CARD_LABEL) Q2
            ON Q1.SHEME_NAME = Q2.SHEME_NAME;
            
          --GET TIP AMOUNT   
            BEGIN
              SELECT COUNT(*),SUM(P_ADDAMOUNT) INTO O_TIP_COUNT,O_TIP_AMOUNT FROM TCH_PAYMENT_AMEX_TXN 
              WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              AND P_TERMINALID = I_TID
              AND P_TIP_APPROVED = '1' GROUP BY P_BATCH_NUMBER;
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                NULL;
             END;         
          END;
        ELSIF I_HOST_ID = 'DCC' THEN
          BEGIN
          O_DEBUG_POINT:='1F';
          
          SELECT MIN(P_CREATED),MAX(P_CREATED) INTO O_START_DATE,O_END_DATE FROM TCH_DCC_PAYMENT_TXN
            WHERE P_RESPONSE_CODE='00'
            AND P_REQUEST_TYPE <> 'TIP'
            AND P_REQUEST_TYPE <> 'REVERSAL'
            AND P_TERMINALID = I_TID
            AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
          
          OPEN C_SETTLEMENT_DATA_REQUEST FOR
          SELECT REQUEST_TYPE, SUM(COUNT_VAL) AS COUNT_VAL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT FROM (
            SELECT CASE P_REQUEST_TYPE 
            WHEN 'SALECSHBK' THEN 'SALE' 
            WHEN'CSHBK' THEN 'SALE'
            WHEN 'SALECOMP' THEN 'SALE'
            WHEN 'SALEEMI' THEN 'SALE'
            WHEN 'VOIDSALECSHBK' THEN 'VOID'
            WHEN 'VOIDEMISALE' THEN 'VOID'
            WHEN 'VOIDSALETIP' THEN 'VOID'
            ELSE P_REQUEST_TYPE END AS REQUEST_TYPE, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT 
            FROM TCH_DCC_PAYMENT_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
              AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
              AND TTP.P_TERMINALID = I_TID
              AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              GROUP BY TTP.P_REQUEST_TYPE ) T 
              GROUP BY REQUEST_TYPE;
                      
             O_DEBUG_POINT:='1G';  
           OPEN C_SETTLEMENT_DATA_SCHEME FOR
            SELECT Q1.SHEME_NAME , Q1.COUNT_VAL, Q1.TOTAL_AMOUNT, Q2.TOTAL_REFUND_AMOUNT
            FROM (SELECT  P_CARD_LABEL AS SHEME_NAME, COUNT(1) AS COUNT_VAL, SUM(P_ORIGINAL_AMOUNT) AS TOTAL_AMOUNT
            FROM TCH_DCC_PAYMENT_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE <> 'TIP'
                AND TTP.P_REQUEST_TYPE <> 'VOID'
                AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                AND TTP.P_REQUEST_TYPE <> 'REFUND'
                AND TTP.P_REQUEST_TYPE <> 'REVERSAL'
                AND TTP.P_REQUEST_TYPE <> 'VOIDREFUND'
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
                GROUP BY TTP.P_CARD_LABEL) Q1
            LEFT JOIN
            (SELECT P_CARD_LABEL AS SHEME_NAME,SUM(P_ORIGINAL_AMOUNT) AS TOTAL_REFUND_AMOUNT  
            FROM TCH_DCC_PAYMENT_TXN TTP WHERE TTP.P_RESPONSE_CODE = '00' 
                AND TTP.P_REQUEST_TYPE = 'REFUND'
                AND TTP.P_TERMINALID = I_TID
                AND TTP.P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER GROUP BY TTP.P_CARD_LABEL) Q2
            ON Q1.SHEME_NAME = Q2.SHEME_NAME;
            
            --GET TIP AMOUNT   
            BEGIN
              SELECT COUNT(*),SUM(P_ADDAMOUNT) INTO O_TIP_COUNT,O_TIP_AMOUNT FROM TCH_DCC_PAYMENT_TXN 
              WHERE P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
              AND P_TERMINALID = I_TID
              AND P_TIP_APPROVED = '1' GROUP BY P_BATCH_NUMBER;
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                NULL;
             END;
            
          END;
        END IF;
      END IF;
    END IF;
 
--PADDING BATCH NUMBER
    O_BATCH_NUMBER := LPAD(O_BATCH_NUMBER,6,'0');
    O_DEBUG_POINT:='3';
   
    EXCEPTION  
    WHEN NO_DATA_FOUND THEN 
        IF O_DEBUG_POINT = '1A' THEN 
            O_APP_ERROR_CODE := 'R-202';
        ELSIF O_DEBUG_POINT = '1BA' THEN
          O_APP_ERROR_CODE := 'R-202';
        END IF;                
    WHEN OTHERS THEN
        IF O_DEBUG_POINT = '1A' THEN 
            O_APP_ERROR_CODE := 'R-202';
        ELSIF O_DEBUG_POINT = '2B' THEN 
            O_APP_ERROR_CODE := 'R-202'; 
        ELSIF O_DEBUG_POINT = '1BA' THEN
          O_APP_ERROR_CODE := 'R-202';
        END IF ;
        O_SQL_CODE := SQLCODE; 
    
END TCH_SUMMARY_REPORT_PROC1;