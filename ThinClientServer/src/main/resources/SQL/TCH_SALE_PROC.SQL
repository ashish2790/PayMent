create or replace 
PROCEDURE TCH_PAYMENT_SALE_PROC 
(
  I_TERMINAL_SERIAL_NUMBER IN VARCHAR2  
, I_APP_NAME IN VARCHAR2
, O_MERCHANT_ID OUT VARCHAR2  
, O_TERMINAL_ID OUT VARCHAR2
, O_TERMINAL_SWAPP OUT VARCHAR2
, O_CLIENT_ID OUT VARCHAR2
, O_STAN_NUMBER OUT VARCHAR2
, O_BATCH_NUMBER OUT VARCHAR2
, O_SQL_CODE OUT VARCHAR2
, O_APP_ERROR_CODE OUT VARCHAR2
, O_DEBUG_POINT OUT VARCHAR2 
, O_TXN_COUNT OUT VARCHAR2
, O_DAILY_LIMIT OUT VARCHAR2
, O_RTM_FLAG OUT NUMBER
, O_DOWNLOAD_TIME OUT VARCHAR2
, C_TERMINAL_PARAM OUT SYS_REFCURSOR
, C_APP_CONFIG OUT SYS_REFCURSOR
, C_HEALTH_OBJECT OUT SYS_REFCURSOR
, C_UTILITY_INFO OUT SYS_REFCURSOR
) AS 

TYPE TCH_STRING_ARRAY IS VARRAY (500) OF VARCHAR2(10);

V_CLIENT_ID VARCHAR2(20):= NULL;
V_STATUS VARCHAR2(2):=NULL;
V_COUNT NUMBER(4):=NULL; 
V_MID VARCHAR(20):=NULL;
V_TID VARCHAR(20):=NULL;
V_PID TCH_STRING_ARRAY;

BEGIN



--GET THE STATUS WHETHER TERMINAL IS ACTIVE OR NOT
      O_DEBUG_POINT:='0';
      SELECT STATUS INTO V_STATUS FROM TC_TID_HWSR_MAPPING WHERE HWSRNO = I_TERMINAL_SERIAL_NUMBER;
      IF V_STATUS = 'D' THEN
        BEGIN
          RAISE_APPLICATION_ERROR('-20121','TERMINAL IS DEACTIVATED');
        END;
      END IF;


 -- GET THE CLIENT ID FROM HANDSHAKE 
      O_DEBUG_POINT:='1';
      SELECT COUNT(1) INTO V_COUNT FROM TCH_HANDSHAKES 
      WHERE H_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
      
      IF V_COUNT = 1 THEN
        BEGIN 
          O_DEBUG_POINT := '1A';
          
          SELECT H_CLIENT_ID, H_CARD_ACQUIRING_ID, H_TID INTO V_CLIENT_ID, O_MERCHANT_ID, O_TERMINAL_ID FROM TCH_HANDSHAKES 
          WHERE H_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
          O_CLIENT_ID := V_CLIENT_ID;
        END;        
      ELSIF V_COUNT = 0 THEN
        BEGIN
          O_DEBUG_POINT:='1B';
          RAISE_APPLICATION_ERROR(-20001,'NO MAPPING FOR HANDSHAKE');
        END;
      END IF;

-- CHECK FOR THE SWAPPING
      O_DEBUG_POINT := '2';
         
      SELECT COUNT(1) INTO  V_COUNT FROM TC_TID_HWSR_MAPPING 
      WHERE HWSRNO = I_TERMINAL_SERIAL_NUMBER;
      
      IF V_COUNT = '1' THEN
        BEGIN
          O_DEBUG_POINT:='2A';
          SELECT MID, TID INTO  V_MID, V_TID FROM TC_TID_HWSR_MAPPING 
          WHERE HWSRNO = I_TERMINAL_SERIAL_NUMBER;   
          IF ((V_MID != O_MERCHANT_ID) OR (V_TID != O_TERMINAL_ID)) THEN
            BEGIN
              O_DEBUG_POINT:='2B';
              RAISE_APPLICATION_ERROR(-20121,'SWAPPING MID TID ISSUE');
            END ;
          END IF;
        END;
      ELSIF V_COUNT <> 1 THEN
        BEGIN
          O_DEBUG_POINT:='2B';
          RAISE_APPLICATION_ERROR(-20201, 'NO MAPPING FOUND IN INSIGHT DB');
        END;
      END IF;
-- GET TERMINAL PARAMETER
    O_DEBUG_POINT:='3';
    
    SELECT COUNT(1) INTO V_COUNT FROM TC_TERM_PARAMETER TTP JOIN TC_TID_HWSR_MAPPING THM ON TTP.MID = THM.MID AND TTP.TID = THM.TID 
    JOIN TC_ME_PARAMETER TMP ON  TMP.MEPARAMID = TTP.MEPARAMID 
    WHERE THM.HWSRNO = I_TERMINAL_SERIAL_NUMBER ;
    
    IF V_COUNT = 0 THEN
      BEGIN
        O_DEBUG_POINT:='3A';
        RAISE_APPLICATION_ERROR(-20121,'NO MAPPING FOUND IN INSIGHT');
      END;
    ELSE 
      BEGIN 
      O_DEBUG_POINT:='4';
        OPEN C_TERMINAL_PARAM FOR
          SELECT TTP.* FROM TC_TERM_PARAMETER TTP JOIN TC_TID_HWSR_MAPPING THM ON TTP.MID = THM.MID AND TTP.TID = THM.TID 
          JOIN TC_ME_PARAMETER TMP ON  TMP.MEPARAMID = TTP.MEPARAMID 
          WHERE THM.HWSRNO = I_TERMINAL_SERIAL_NUMBER ;
      END;
    END IF;
    
    O_DEBUG_POINT:='5';
    SELECT SEQ_TC_STAN_NUMBER.NEXTVAL INTO O_STAN_NUMBER FROM DUAL ;
    O_STAN_NUMBER :=  LPAD(O_STAN_NUMBER,6,'0'); 
--GET THE BATCH NUMBER
    
    O_DEBUG_POINT:='6';
    
    SELECT COUNT(1) INTO V_COUNT FROM TCH_PAYMENT_TXN WHERE P_MERCHANTID = O_MERCHANT_ID AND P_TERMINALID = O_TERMINAL_ID AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
    ORDER BY TO_NUMBER(P_BATCH_NUMBER);
    IF V_COUNT = 0 THEN
      BEGIN
        SELECT COUNT(1) INTO V_COUNT FROM TCH_SETTLED_PAYMENT_TXN WHERE P_MERCHANTID = O_MERCHANT_ID AND P_TERMINALID = O_TERMINAL_ID AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
        ORDER BY TO_NUMBER(P_BATCH_NUMBER);
        IF V_COUNT = 0 THEN
          INSERT INTO TCH_BATCH_SUMMARY VALUES (SEQ_TC_BATCH_SUMMARY_ID.NEXTVAL, O_MERCHANT_ID, O_TERMINAL_ID, I_TERMINAL_SERIAL_NUMBER, CURRENT_TIMESTAMP,NULL,'0');
          O_BATCH_NUMBER :=  LPAD('1',6,'0');
        ELSE
          BEGIN
            SELECT P_BATCH_NUMBER INTO O_BATCH_NUMBER FROM TCH_SETTLED_PAYMENT_TXN WHERE P_MERCHANTID = O_MERCHANT_ID AND P_TERMINALID = O_TERMINAL_ID AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
            ORDER BY TO_NUMBER(P_BATCH_NUMBER) DESC FETCH FIRST 1 ROWS ONLY;
            O_BATCH_NUMBER :=  O_BATCH_NUMBER + 1;
            INSERT INTO TCH_BATCH_SUMMARY VALUES (SEQ_TC_BATCH_SUMMARY_ID.NEXTVAL, O_MERCHANT_ID, O_TERMINAL_ID, I_TERMINAL_SERIAL_NUMBER, CURRENT_TIMESTAMP,NULL,O_BATCH_NUMBER);
            O_BATCH_NUMBER := LPAD(O_BATCH_NUMBER,6,'0');
          END;
        END IF;
      END;
    ELSIF V_COUNT <> 0 THEN
      BEGIN
        SELECT P_BATCH_NUMBER INTO O_BATCH_NUMBER FROM TCH_PAYMENT_TXN WHERE P_MERCHANTID = O_MERCHANT_ID AND P_TERMINALID = O_TERMINAL_ID AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
        ORDER BY TO_NUMBER(P_BATCH_NUMBER) DESC FETCH FIRST 1 ROWS ONLY;
        O_BATCH_NUMBER :=  LPAD(O_BATCH_NUMBER,6,'0');
      END;
    END IF;
    
-- GET THE BIN RANGE VALUE 
    OPEN C_APP_CONFIG FOR
      SELECT * FROM TCH_APPL_CONFIG;
      
 -- GET DAILY TRANSACTION LIMIT
    SELECT DAILY_TXN_COUNT INTO O_DAILY_LIMIT  FROM TC_TID_HWSR_MAPPING WHERE HWSRNO = I_TERMINAL_SERIAL_NUMBER;
    
--GET THE TRANSACTION COUNT (MAX 100)
    O_DEBUG_POINT:='6AA';
   
    SELECT COUNT(1) INTO O_TXN_COUNT FROM TCH_PAYMENT_TXN 
    WHERE P_MERCHANTID = O_MERCHANT_ID 
    AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
    AND P_TERMINALID = O_TERMINAL_ID
    AND P_REQUEST_TYPE = 'SALE'
    AND P_RESPONSE_CODE = '00';
    
    IF O_TXN_COUNT = O_DAILY_LIMIT THEN
      BEGIN
        O_DEBUG_POINT:='6AAB';
        SELECT P_ID BULK COLLECT INTO V_PID FROM TCH_PAYMENT_TXN WHERE P_MERCHANTID = O_MERCHANT_ID AND P_TERMINALID = O_TERMINAL_ID 
        AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
        
        --MOVE ALL THE TRANSACTION FROM PAYMENT TABLE TO SETTLEMENT TABLE BASED ON MID AND TID
        INSERT INTO TCH_SETTLED_PAYMENT_TXN SELECT * FROM TCH_PAYMENT_TXN TTP WHERE P_MERCHANTID = O_MERCHANT_ID 
        AND P_TERMINALID = O_TERMINAL_ID
        AND P_TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER;
      
        --UPDATE SETTLEMENT FLAG AS Y AND DELETE ENTRY FROM PAYMENT TABLE
        FOR INDX IN V_PID.FIRST..V_PID.LAST LOOP
          UPDATE TCH_SETTLED_PAYMENT_TXN SET P_SETTLEMENT_FLAG = 'Y' WHERE P_ID = V_PID(INDX);
          DELETE FROM TCH_PAYMENT_TXN WHERE P_ID = V_PID(INDX);  
        END LOOP;
        O_BATCH_NUMBER :=  O_BATCH_NUMBER + 1;
        O_BATCH_NUMBER := LPAD(O_BATCH_NUMBER,6,'0');
      END;
    END IF;
-- GET THE HEALTHOBJECT BASED ON RTM FLAG
    O_DEBUG_POINT := '6Z';
    SELECT H_RTM_FLAG, H_DWNLD_TM INTO O_RTM_FLAG, O_DOWNLOAD_TIME FROM TCH_HANDSHAKES WHERE H_TERMINAL_SERIAL_NUMBER =  I_TERMINAL_SERIAL_NUMBER;
    IF O_RTM_FLAG = 1 THEN
      BEGIN
        O_DEBUG_POINT := '6ZA';
        OPEN C_HEALTH_OBJECT FOR 
          SELECT * FROM TCH_HEALTH_OBJECT WHERE TERMINAL_SERIAL_NUMBER = I_TERMINAL_SERIAL_NUMBER
          AND TID = O_TERMINAL_ID AND MID = O_MERCHANT_ID;
-- SET INSTALL FLAG AS 'N' FOR RTM DOWNLOAD AVAILABLE
        UPDATE TCH_HANDSHAKES SET H_RTM_FLAG = '0' , H_INSTALL_FLAG = 'N' WHERE H_TERMINAL_SERIAL_NUMBER =  I_TERMINAL_SERIAL_NUMBER;
      END;
    END IF;
 -- GET UTILITY INFO
    IF I_APP_NAME IS NOT NULL THEN
      BEGIN 
        OPEN C_UTILITY_INFO FOR
          SELECT U_PRINT_LABELS FROM TCH_UTILITY_INFO WHERE U_APP_NAME = I_APP_NAME;
      END;
    END IF;
    O_DEBUG_POINT:= '7'; 
      
    EXCEPTION
      WHEN NO_DATA_FOUND THEN 
        IF O_DEBUG_POINT = '1B' THEN 
            O_APP_ERROR_CODE := 'S-999';
        END IF;
        IF O_DEBUG_POINT = '3A' THEN 
            O_APP_ERROR_CODE :=  'S-009';
        END IF;
      WHEN TOO_MANY_ROWS THEN 
        IF O_DEBUG_POINT = '2A' THEN 
          O_APP_ERROR_CODE := 'H-001'; 
        END IF ;
      WHEN OTHERS THEN
        IF O_DEBUG_POINT = '0' THEN
          O_APP_ERROR_CODE := 'Z-010'; 
        ELSIF O_DEBUG_POINT = '1B' THEN 
            O_APP_ERROR_CODE := 'S-999'; 
        ELSIF O_DEBUG_POINT = '2A' THEN
            O_APP_ERROR_CODE:='S-002';
        ELSIF O_DEBUG_POINT = '2B' THEN
            O_APP_ERROR_CODE:='S-999'; 
        ELSIF O_DEBUG_POINT = '3A' THEN
            O_APP_ERROR_CODE:='S-009';
        END IF ;      
        O_SQL_CODE := SQLCODE; 
  END TCH_PAYMENT_SALE_PROC;